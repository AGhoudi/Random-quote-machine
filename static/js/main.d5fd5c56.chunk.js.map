{"version":3,"sources":["components/QuoteList/store.js","components/Button/Button.jsx","components/QuoteList/QuoteList.jsx","components/QuoteBox/QuoteBox.jsx","App.js","serviceWorker.js","index.js"],"names":["quotes","author","text","colors","Button","className","href","id","rel","target","QuoteList","props","state","handleClick","bind","map","quote","index","Math","floor","random","this","setState","Fragment","onClick","role","aria-label","React","Component","QuoteBox","color","style","backgroundColor","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d5fd5c56.chunk.js","sourcesContent":["export const quotes = [\r\n\r\n    {author: \"Elbert Hubbard\",\r\n     text: \"A friend is someone who knows all about you and still loves you\"\r\n    },\r\n\r\n    {author: \"Confucius\",\r\n    text: \"Choose a job you love, and you will never have to work a day in your life\"\r\n    },\r\n\r\n    {author: \"Oscar Wilde\",\r\n    text: \"True friends stab you in the front\"\r\n    },\r\n\r\n    {author: \"Abraham Lincoln\",\r\n    text: \"We all have two lives, the second begins when we realize we only have one\"\r\n    },\r\n\r\n    {author: \"William Blake\",\r\n    text: \"It is easier to forgive an enemy than to forgive a friend\"\r\n    },\r\n\r\n    {author: \"Albert Einstein\",\r\n    text: \"Logic will get you from A to Z , Imagination will get you everywhere\"\r\n    },\r\n\r\n    {author: \"Franklin P. Jones\",\r\n    text: \"Honest criticism is hard to take, particularly from a relative, a friend, an acquaintance, or a stranger\"\r\n    },\r\n\r\n    {author: \"Albert Einstein\",\r\n    text: \"Life is like riding a bicycle. In order to keep your balance, you must keep moving\"\r\n    },\r\n\r\n    {author: \"C.S. Lewis\",\r\n    text: \"Friendship is born at that moment when one person says to another: What! You too? I thought I was the only one\"\r\n    },\r\n\r\n    {author: \"Martin Luther King\",\r\n    text: \"The ultimate measure of a man is not where he stands in moments of comfort and convenience, but where he stands at times of challenge and controversy\"\r\n    },\r\n\r\n    {author: \"Albert Camus\",\r\n    text: \"Don’t walk behind me, I may not lead. Don’t walk in front of me, I may not follow. Just walk beside me and be my friend\"\r\n    },\r\n\r\n    {author: \"Ralph Waldo Emerson\",\r\n    text: \"What lies behind us and what lies ahead of us are tiny matters to what lies within us\"\r\n    },\r\n\r\n    {author: \"Elbert Hubbard\",\r\n    text: \"A friend is someone who knows all about you and still loves you\"\r\n    },\r\n\r\n    {author: \"Nelson Mandela\",\r\n    text: \"The greatest glory in living lies not in never falling, but in rising every time we fall\"\r\n    },\r\n\r\n    {author: \"Len Wein\",\r\n    text: \"A friend is someone who is there for you when he’d rather be anywhere else\"\r\n    },\r\n\r\n    {author: \"Nelson Mandela\",\r\n    text: \"A winner is a dreamer who never gives up\"\r\n    },\r\n\r\n    {author: \"Aristotle\",\r\n    text: \"Misfortune shows those who are not really friends\"\r\n    },\r\n\r\n    {author: \"Franklin P. Jones\",\r\n    text: \"Love doesn’t make the world go round. Love is what makes the ride worthwhile\"\r\n    },\r\n\r\n    {author: \"Oscar Wilde\",\r\n    text: \"Woman are meant to be loved, not to be understood\"\r\n    },\r\n\r\n    {author: \"Helen Keller\",\r\n    text: \"The best and most beautiful things in the world cannot be seen or even touched. They must be felt with the heart \"\r\n    },\r\n\r\n];\r\n\r\nexport const colors = [\r\n    \r\n    \"#8e5bb3\",\r\n    \"#c958cf\",\r\n    \"#f79dbc\",\r\n    \"#E26FE8\",\r\n    \"#903ad6\",\r\n    \"#e75e65\",\r\n    \"#d47e90\",\r\n    \"#f76396\",\r\n    \"#E86FAC\",\r\n    \"#ff8ed7\"\r\n\r\n];","import React from 'react';\r\nimport './Button.css';\r\n\r\nconst Button = () => {\r\n    \r\n\r\n\r\n    \r\n        return (\r\n            <div>\r\n                <button className=\"share\"><a href=\"https://www.twitter.com/intent/tweet\" id=\"tweet-quote\"  rel=\"noopener noreferrer\" target=\"_blank\"><i className=\"fab fa-twitter mr-2\"></i>Share</a></button>\r\n            </div>\r\n        );\r\n    \r\n    \r\n}\r\n\r\nexport default Button;","import React from 'react';\r\nimport './QuoteList.css';\r\nimport { quotes } from './store';\r\nimport Button from '../Button/Button';\r\n\r\n\r\nclass QuoteList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            text: '',\r\n            author: ''\r\n        }\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n    \r\n    componentDidMount() {\r\n        const text = quotes.map(quote => quote.text);\r\n        const author = quotes.map(quote => quote.author);\r\n        const index = Math.floor(((Math.random() * 20) + 1) - 1);\r\n        this.setState({ \r\n            text: text[index],\r\n            author: author[index]\r\n        })\r\n    }\r\n    \r\n    handleClick() {\r\n        const text = quotes.map(quote => quote.text);\r\n        const author = quotes.map(quote => quote.author);\r\n        const index = Math.floor(((Math.random() * 20) + 1) - 1);\r\n        this.setState({ \r\n            text: text[index],\r\n            author: author[index]\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        \r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"contentBox\">\r\n                    <p className=\"text\"> {this.state.text}</p>\r\n                    <p className=\"author\">&#10026; {this.state.author} &#10026;</p>\r\n                </div>\r\n                <div className=\"quoteButton\">\r\n                    <button className=\"nextQuote\" onClick={this.handleClick}><span role=\"img\" aria-label=\"Reflexive\">&#129320;</span> Next Quote</button>\r\n                </div>\r\n                <div className=\"quoteButton\">\r\n                    <Button />\r\n                </div>                                              \r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default QuoteList;","import React from 'react';\r\nimport './QuoteBox.css';\r\nimport QuoteList from '../QuoteList/QuoteList';\r\nimport { colors } from '../QuoteList/store'\r\n\r\nclass QuoteBox extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            color: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const color = colors.map(color => color);\r\n        const index = Math.floor(((Math.random() * 10) + 1) - 1);\r\n        this.setState({ color: color[index]})\r\n    }\r\n\r\n    render() {        \r\n        return (\r\n            <div className=\"quoteBox\"  style={{backgroundColor: this.state.color}}>\r\n                <QuoteList />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default QuoteBox;","import React from 'react';\nimport './App.css';\nimport QuoteBox from './components/QuoteBox/QuoteBox';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <h1><span className=\"colored_title\">Random<br/>Quote</span><br/>\n            Machine\n        </h1>\n        <QuoteBox />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}